<spring:beans xmlns="http://membrane-soa.org/proxies/1/"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
					    http://membrane-soa.org/proxies/1/ http://membrane-soa.org/schemas/proxies-1.xsd">

    <router>
        <serviceProxy name="Membrane Resource service" port="8080">

            <!-- Protects a resource with OAuth2 - blocks on invalid login -->
            <oauth2Resource>
                <membrane subject="sub" src="https://accounts.google.com" clientId="YOUR CLIENT ID HERE" clientSecret="YOUR CLIENT SECRET HERE" scope="openid email profile" claims="name" claimsIdt="email" />
            </oauth2Resource>

            <!-- This is optional. You can use the information from the authentication server and pass it to the resource server or do
             anything you want. -->
            <groovy>
                def oauth2 = exc.properties['oauth2']
                <!-- Put the eMail of the user into the request header X-EMAIL and pass it to the protected server. -->
                exc.request.getHeader().setValue('X-EMAIL',oauth2.userinfo.email)
                CONTINUE
            </groovy>

            <!-- Route to the protected resource on valid access token -->
            <target host="localhost" port="2002"/>

        </serviceProxy>

        <!-- Protected resource -->
        <serviceProxy port="2002">
            <groovy>
                exc.setResponse(Response.ok("Hello " + exc.request.header.getFirstValue("X-EMAIL")).build())
                RETURN
            </groovy>
        </serviceProxy>

        <serviceProxy port="9001">
            <adminConsole/>
        </serviceProxy>

    </router>

</spring:beans>